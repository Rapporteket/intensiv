\documentclass[handout, xcolor=pdftex,dvipsnames,table]{beamer}  %presentation,
\usetheme{Hannover}

\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage[english, norsk]{babel}
\usepackage{xspace}
\usepackage{booktabs}
\usepackage{rotating}
\usepackage{graphicx}


<<'initOpts',include=FALSE>>=
knitr::opts_chunk$set(warnings=FALSE,echo=FALSE)
knitr::opts_knit$set(root.dir = './')
library(xtable)
library(lubridate)
@

<<'hentDataOgTilrettelegg', include=FALSE>>=
#startOfMonth<- function(x) {as.Date(format(x, "%Y-%m-01")) }

if (!exists('InfluDataAlle')){
      NIRInfluDataSQL <- function(datoFra = '2019-01-01', datoTil = '2099-01-01') {
            
            registryName <- "nir"
            dbType <- "mysql"
            query <- paste0('SELECT 
                  RHF,
                  PatientInRegistryGuid,
                  FormDate,
                  ICD10_1,
                  ICD10_2
            FROM InfluensaFormDataContract
            WHERE cast(FormDate as date) BETWEEN \'', datoFra, '\' AND \'', datoTil, '\'')
            #WHERE cast(DateAdmittedIntensive as date) >= \'', datoFra, '\' AND DateAdmittedIntensive <= \'', datoTil, '\'')  
            
            RegData <- rapbase::LoadRegData(registryName, query, dbType)
            return(RegData)
      }  
      InfluData <- NIRInfluDataSQL(datoFra = '2019-01-01')
}
#library(dplyr)
InfluData$InnDato <- as.Date(InfluData$FormDate) #, tz='UTC', format = '%Y-%m-%d"')
	
@

\begin{document}

\title[Influensa \\\today] {%\textit{Influensadata, NIR} \\
Influensarapportering fra NIR, 2019 }

\maketitle




%\begin{frame}[fragile] {Hva er dette?}
% Dette er en automagisk utsendt rapport fra Norsk Intensivregister (NIR). 
% Dokumentet inneholder oppsummering av influensatilfeller hos pasienter som 
% kvalifiserer for rapportering til NIR. 
% Influensatilfellene er rapportert i eget skjema i registeret og det er data fra dette skjemaet som danner grunnlaget
% for denne rapporten.
%\end{frame}

\begin{tiny}

<<'LageTabeller', results='asis'>>=

InfluData$Influensa <- NA
# InfluData$Bekreftet <- 0
# InfluData$Mistenkt <- 0
#--Identifiser J10 og J11 i ICD10-variablene.
 indBekreftet <- which(InfluData$ICD10_1==10 | InfluData$ICD10_2==10)
 indMistenkt <- which(InfluData$ICD10_1==11 | InfluData$ICD10_2==11)
# InfluData$Bekreftet <- (InfluData$ICD10_1==10 | InfluData$ICD10_2==10)
# InfluData$Mistenkt <- (InfluData$ICD10_1==11 | InfluData$ICD10_2==11)
 InfluData$Influensa[indMistenkt] <- 'Mistenkt'
 InfluData$Influensa[indBekreftet] <- 'Bekreftet'

 
#Legge på tidsenheter
InfluData$Aar <- format(InfluData$InnDato, '%Y')
InfluData$UkeNr <- format(InfluData$InnDato, '%V')
InfluData$UkeAar <- format(InfluData$InnDato, '%Y.%V')
#InfluData$UkeAar <- sub('19.00', '18.52', InfluData$UkeAar)


#InfluData$UkeNr <- factor(InfluData$UkeNr, levels=c(min(InfluData$UkeNr):max(InfluData$UkeNr)))
InfluData$RHF <- factor(InfluData$RHF)

# dato <- '2018-12-31'
# format.Date(dato, '%Y.%V')
# lubridate::isoweek(dato)
# lubridate::week(dato)

#Aggregere på RHF, UkeNr, Ant. bekreftet, Ant. mistenkt
# tapply(InfluData[ ,c('Bekreftet', 'Mistenkt')], InfluData[ ,c('RHF', 'UkeAar')], sum, na.rm=T)#InfluData$UkeNr, function(x) sum((InfluData$ICD10_1==10 | InfluData$ICD10_2==10)))
# tapply(InfluData[ ,c('RHF', 'UkeAar', "ICD10_1")], length)
# table(InfluData[ ,c('RHF', 'Mistenkt', 'UkeNr')])      #InfluData$UkeNr, function(x) sum((InfluData$ICD10_1==10 | InfluData$ICD10_2==10)))
TabUkeRHF <- ftable(InfluData[ ,c('UkeAar', 'RHF', 'Influensa')])      #InfluData$UkeNr, function(x) sum((InfluData$ICD10_1==10 | InfluData$ICD10_2==10)))
# dum <- as.table(TabUkeRHF)
# MistenktUkeRHF<- dum[,,'Mistenkt']
# addmargins(MistenktUkeRHF) #, margin = seq_along(dim(MistenktUkeRHF)), FUN = sum, quiet = FALSE)
TabUkeTot <- table(InfluData[ ,c('UkeAar', 'Influensa')])      #InfluData$UkeNr, function(x) sum((InfluData$ICD10_1==10 | InfluData$ICD10_2==10)))
@ 

\begin{frame}[fragile] {Bekreftet Influensa}
<<'TabUkeRHFBekreftet', results='asis'>>=
print(xtable::xtable(addmargins(as.table(TabUkeRHF)[,,'Bekreftet']), digits=0, #align=c('l', rep('r', ncol(alderDIV))), 
		caption='Bekreftet influensa per uke og region, 2019'),  
		sanitize.rownames.function = identity)
@
\end{frame}

\begin{frame}[fragile] {Mistenkt Influensa}
<<'TabUkeRHFMistenkt', results='asis'>>=
print(xtable::xtable(addmargins(as.table(TabUkeRHF)[,,'Mistenkt']), digits=0, #align=c('l', rep('r', ncol(alderDIV))), 
		caption='Mistenkt influensa per uke og region, 2019'), 
      sanitize.rownames.function = identity)
@
\end{frame}

\begin{frame}[fragile] {Influensa per uke, totalt}

<<'TabUkeTot', results='asis'>>=
print(xtable::xtable(TabUkeTot, #digits=1, align=c('l', rep('r', ncol(alderDIV))), 
		caption='Influensatilfeller per uke, 2019'), 
		sanitize.rownames.function = identity)
@
\end{frame}
\end{tiny}
\end{document}
